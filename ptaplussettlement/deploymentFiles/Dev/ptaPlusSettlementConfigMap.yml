apiVersion: v1
kind: ConfigMap
metadata:
  name: p2m-pay-settlement-refactor
  namespace: finoptaplus
data:
  TZ: Asia/Kolkata
  ldapTimeOut: '5000'
  ##logical db configuration
  quarkus.http.port: '8080'
  quarkus.datasource.jdbc.url: jdbc:postgresql://135.181.0.42:7772/fino
  quarkus.datasource.username: postgres
  quarkus.datasource.password: redhat
  quarkus.datasource.db-kind: postgresql
  quarkus.hibernate-orm.packages: com.finobank.ptaplus.repository.logical

  #MAIN DATABASE
  quarkus.datasource."db".jdbc: 'true'
  quarkus.datasource."db".jdbc.url: jdbc:postgresql://135.181.0.42:7772/fino
  # quarkus.datasource.reactive.url = vertx-reactive:postgresql://135.181.0.42:7772/fino
  quarkus.datasource."db".username: postgres
  quarkus.datasource."db".password: redhat
  quarkus.datasource."db".db-kind: postgresql
  quarkus.hibernate-orm."db".packages: com.finobank.ptaplus.repository.main
  quarkus.hibernate-orm."db".datasource: db
  quarkus.hibernate-orm.log.sql: 'true'

  ## Pta Posting service
  COM_FINOBANK_PTAPLUS_CLIENT_POSTTRANSACTION_MP_REST_URL : http://localhost:8080/post-transaction
  ##ESB Transaction service
  COM_FINOBANK_PTAPLUS_CLIENT_CBSTRANSACTIONRESTCLIENT_MP_REST_URL: http://10.15.15.247:81/esb/cbs/settlement/transactions
  COM_FINOBANK_PTAPLUS_CLIENT_CBSTRANSACTIONRESTCLIENT_MP_REST_SCOPE: javax.inject.Singleton
  COM_FINOBANK_PTAPLUS_CLIENT_CBSTRANSACTIONRESTCLIENT_MP_REST_CONNECTTIMEOUT: ${esbApiConnectTimedOut}
  COM_FINOBANK_PTAPLUS_CLIENT_CBSTRANSACTIONRESTCLIENT_MP_REST_READTIMEOUT: ${esbApiReadTimedOut}
  ## SettlementRule service
  COM_FINOBANK_PTAPLUS_CLIENT_EODBATCHRULECLIENT_MP_REST_URL: http://135.181.0.42:7790/eod-config
  COM_FINOBANK_PTAPLUS_CLIENT_SETTLEMENTBATCHCLIENT_MP_REST_URL: http://135.181.0.42:7790/batch-config
  esbApiConnectTimedOut : '30000'
  esbApiReadTimedOut : '30000'
  settlementTransactionCategory: PTNREOD
  eodTransactionCategory: PTNREOD
  settlementAppId: FINOTLR
  debitAdjustmentCommentPrefix: DrAdj/SETTLEMENT/
  creditAdjustmentCommentPrefix: CrAdj/SETTLEMENT/
  settlementIftRfuFormat: ZRFUT8#@{cbsReferenceNo}~TCMT#@{tranCategory}/@{cbsTransactionType}/@{cbsReferenceNo}/@{DATE}
  iftTransactionCommentFormat: '@{tranCategory}/@{cbsReferenceNo}/@{accountNumber}/@{DATE}'
  ##swagger
  quarkus.swagger-ui.always-include: 'true'
  quarkus.swagger-ui.path: /PtaPlusSettlement
  quarkus.smallrye-openapi.path: /openapi/PtaPlusSettlement
  quarkus.application.name: PtaPlusSettlement
  quarkus.opentelemetry.enabled: 'true'
  ##jaeger endpoint
  quarkus.opentelemetry.tracer.exporter.otlp.endpoint: http://135.181.0.42:4317
  quarkus.log.console.format: '%d{YYYY-MM-dd :HH:mm:ss} | logLevel= %-5p |(%t)| traceId=%X{traceId} | parentId=%X{parentId} | spanId=%X{spanId} | sampled=%X{sampled} | class=%c{2.}  method=%M | message=%s %e%n'


  eolCharacters: "\n"
  referenceJoiner: '-'
  ApiModeRetryCount: '2'
  costCentre: '9001'
  SETTLEMENT_IFT_PROCESSING_ROUTE: direct:settlement-ift-processing-route
  glSettlementProducerBucketName: glsettlementproducer
  glSettlementConsumerBucketName: glsettlementconsumer
  ### minio configuration
  minioConfig: endpoint=localhost&proxyPort=9000&accessKey=minioadmin&secretKey=minioadmin
  quarkus.minio.allow-empty: 'false'
  quarkus.minio.url: http://localhost:9000
  quarkus.minio.access-key: minioadmin
  quarkus.minio.secret-key: minioadmin
  fileStorageLocationErrorSettlement: /tmp/Error/Settlement
  startRandomNumber: '100'
  maxRandomNumber: '1000'
  settlementIftFilePrefix: IFT_P2M_PTASETTLE_
  settlementIftFileNameFormat: ${settlementIftFilePrefix}@{createDate}_@{batchId}_@{iftSerial}.csv
  debitAccountGLTranType: MDR
  creditAccountGLTranType: MCR
  ftpHost : ${FTP_SERVER_SERVICE_HOST:localhost}
  ftpPort : ${FTP_SERVER_SERVICE_PORT:22}
  ftpUsername : ${FTP_USER:anurag}
  ftpPassword : ${FTP_PASSWORD:redhat}
  sftpPollingDelay: '2000'
  settlementIFTResultDownloadDir: /Settlement/IFT_Response
  settlementIFTResultDownloadDirPollingDelay: ${sftpPollingDelay}
  settlementDownloadedIFTSuffix: '.out'
  fastExistsEnable: 'false'
  noopEnable: 'true'
  settlementTranCategoryInComment: SETTLEMENT
  eodTranCategoryInComment: SETTLEMENTEOD

  ##transactionQueries
  unSettledTransactionQuery: with trandetails as (select txn_reference_no, posting_amount, created_at, case when dr_gl_account = '@{partnerGl}' then -posting_amount when cr_gl_account = '@{partnerGl}' then posting_amount end as amount, coalesce(lag (case when dr_gl_account = '@{partnerGl}' then -posting_amount when cr_gl_account = '@{partnerGl}' then posting_amount end) over(order by created_at),0.00) balance from transaction_leg_amt where (dr_gl_account = '@{partnerGl}' or cr_gl_account = '@{partnerGl}') and (created_at < '@{settleDate}') and is_settled_at_p2m=false and transaction_type !='PTNREOD' and transaction_type !='PTASTLMT'), sumdetails as (select txn_reference_no, created_at, amount, sum(amount) over (order by created_at) balance from trandetails), balanceamt as (select balance as nett from sumdetails  order by created_at desc limit 1), settle_results as (select sumdetails.txn_reference_no, sumdetails.created_at, sumdetails.amount, sumdetails.balance, balanceamt.nett, balanceamt.nett-@{thramount}  as threshold, (balanceamt.nett-@{thramount})-sumdetails.balance as settle_amt, case when (balanceamt.nett-@{thramount})-sumdetails.balance >= 0 then true else false end as tosettle  from sumdetails,balanceamt order by created_at desc) select txn_reference_no, created_at, amount, tosettle from settle_results where tosettle=true
  updateTransactionQuery: update transaction_leg_amt set is_settled_at_p2m=true , settled_at_p2m='{@settlementTime}' , settlement_id='{@settlementId}' where txn_reference_no in (with trandetails as (select txn_reference_no, posting_amount, created_at, case when dr_gl_account = '{@partnerGl}' then -posting_amount when cr_gl_account = '{@partnerGl}' then posting_amount end as amount, coalesce(lag (case when dr_gl_account = '{@partnerGl}' then -posting_amount when cr_gl_account = '{@partnerGl}' then posting_amount end) over(order by created_at),0.00) balance from transaction_leg_amt where (dr_gl_account = '{@partnerGl}' or cr_gl_account = '{@partnerGl}') and (created_at < '{@thresholdTime}') and is_settled_at_p2m=false and transaction_type !='PTNREOD' and transaction_type !='PTASTLMT'), sumdetails as (select txn_reference_no, created_at, amount, sum(amount) over (order by created_at) balance from trandetails), balanceamt as (select balance as nett from sumdetails  order by created_at desc limit 1), settle_results as (select sumdetails.txn_reference_no, sumdetails.created_at, sumdetails.amount, sumdetails.balance, balanceamt.nett, balanceamt.nett-{@thresholdAmount}  as threshold, (balanceamt.nett-{@thresholdAmount})-sumdetails.balance as settle_amt, case when (balanceamt.nett-{@thresholdAmount})-sumdetails.balance >= 0 then true else false end as tosettle  from sumdetails,balanceamt order by created_at desc) select txn_reference_no from settle_results where tosettle=true)

  ##settlementQueries
  unsettledSettlementQuery: select cst from CBSSettlementTable cst  where cst.referenceNo  in (select cst2.referenceNo  from CBSSettlementTable cst2 where (cst2.creditGlAccount=?1 or cst2.debitGlAccount=?1) and cst2.settledAtCbs =false)
  updateSuccessCBSSettlementStatusQuery: update cbs_settlement_table set is_settled_at_cbs = true , settled_at_cbs='{@SettledTime}' , settlement_id='{@settlementId}' , cbs_reference_no='{@cbsReferenceNo}' where txn_reference_no='@{txn_ref_No}'
  updateFailerCBSSettlementStatusQuery: update cbs_settlement_table set settled_at_cbs='{@SettledTime}' , settlement_id='{@settlementId}' , cbs_response='{@cbsresponse}' where txn_reference_no='@{txn_ref_No}'

  ## settlemetn audit
  updateStatusQuery: update settlement_audit set processing_status='@{processingStatus}',last_updated='@{lastUpdated}' where batch_id='@{batchId}' and settlement_id='@{settlementId}' and is_running=true
  stopBatchQuery: update settlement_audit set is_running=false, remarks='@{remark}' ,last_updated='@{lastUpdate}' where batch_id='@{batchId}' and settlement_id='@{settlementId}' and is_running=true
  AddSettlementResponeTotheTable: update settlement_audit set is_running=false,records_count={@recordCount} ,success_count={@successCount},failed_count={@failedCount},reject_count={@rejectCount} ,date_responded='{@dateResponded}', processing_status='SETTLEMENT', last_updated='{@dateResponded}',remarks='{@remarks}' where batch_id='{@batchId}' and settlement_id='{@settlementId}' and is_running=true
  AddFileRequesttoTable: update settlement_audit set file_name='{@FileName}' ,records_count={@recordCount} ,reject_count={@rejectCount}, processing_status='IFT_FILE_GENERATION_SUCCEEDED', last_updated='{@dateResponded}',remarks='{@remarks}' where batch_id='{@batchId}' and settlement_id='{@settlementId}' and is_running=true
  AddFileResponsetoTable: update settlement_audit set is_running=false,result_file_name='{@resultFileName}',success_count={@successCount},failed_count={@failedCount},date_responded='{@dateResponded}', processing_status='SETTLEMENT', last_updated='{@dateResponded}',remarks='{@remarks}' where batch_id='{@batchId}' and settlement_id='{@settlementId}' and is_running=true

  # glBalance 
  getGlBalancequery: select f from GeneralLedgerBalance f where f.generalLedgerNumber=?1