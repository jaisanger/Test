%test.quarkus.h2.console.path=/h2
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:db
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
%test.quarkus.hibernate-orm.sql-load-script=import.sql


# %test.stopBatchQuery=UPDATE settlement_audit SET is_running = FALSE, remarks = 'P2M_POSTING_FAILED', last_updated = '2023-12-08 11:28:28 Asia/Kolkata' WHERE batch_id = 'batch2' AND settlement_id = '111' AND is_running = TRUE;
%test.unSettledTransactionQuery=with trandetails as (select txn_reference_no, posting_amount, created_at, case when dr_gl_account = '@{partnerGl}' then -posting_amount when cr_gl_account = '@{partnerGl}' then posting_amount end as amount, coalesce(lag (case when dr_gl_account = '@{partnerGl}' then -posting_amount when cr_gl_account = '@{partnerGl}' then posting_amount end) over(order by created_at),0.00) balance from transaction_leg_amt where (dr_gl_account = '@{partnerGl}' or cr_gl_account = '@{partnerGl}') and (created_at < NOW()) and is_settled_at_p2m=false and transaction_type !='PTNREOD' and transaction_type !='PTASTLMT'), sumdetails as (select txn_reference_no, created_at, amount, sum(amount) over (order by created_at) balance from trandetails), balanceamt as (select balance as nett from sumdetails  order by created_at desc limit 1), settle_results as (select sumdetails.txn_reference_no, sumdetails.created_at, sumdetails.amount, sumdetails.balance, balanceamt.nett, balanceamt.nett-@{thramount}  as threshold, (balanceamt.nett-@{thramount})-sumdetails.balance as settle_amt, case when (balanceamt.nett-@{thramount})-sumdetails.balance >= 0 then true else false end as tosettle  from sumdetails,balanceamt order by created_at desc) select txn_reference_no, created_at, amount, tosettle from settle_results where tosettle=true
%test.updateTransactionQuery=update transaction_leg_amt set is_settled_at_p2m=true , settled_at_p2m=NOW() , settlement_id='{@settlementId}', isEod='{@isEod}' where txn_reference_no in (with trandetails as (select txn_reference_no, posting_amount, created_at, case when dr_gl_account = '{@partnerGl}' then -posting_amount when cr_gl_account = '{@partnerGl}' then posting_amount end as amount, coalesce(lag (case when dr_gl_account = '{@partnerGl}' then -posting_amount when cr_gl_account = '{@partnerGl}' then posting_amount end) over(order by created_at),0.00) balance from transaction_leg_amt where (dr_gl_account = '{@partnerGl}' or cr_gl_account = '{@partnerGl}') and (created_at < NOW()) and is_settled_at_p2m=false and transaction_type !='PTNREOD' and transaction_type !='PTASTLMT'), sumdetails as (select txn_reference_no, created_at, amount, sum(amount) over (order by created_at) balance from trandetails), balanceamt as (select balance as nett from sumdetails  order by created_at desc limit 1), settle_results as (select sumdetails.txn_reference_no, sumdetails.created_at, sumdetails.amount, sumdetails.balance, balanceamt.nett, balanceamt.nett-{@thresholdAmount}  as threshold, (balanceamt.nett-{@thresholdAmount})-sumdetails.balance as settle_amt, case when (balanceamt.nett-{@thresholdAmount})-sumdetails.balance >= 0 then true else false end as tosettle  from sumdetails,balanceamt order by created_at desc) select txn_reference_no from settle_results where tosettle=true)

##settlementQueries
%test.unsettledSettlementQuery=select cst from CBSSettlementTable cst  where cst.referenceNo  in (select cst2.referenceNo  from CBSSettlementTable cst2 where (cst2.creditGlAccount=?1 or cst2.debitGlAccount=?1) and cst2.settledAtCbs =false) order by txn_reference_no asc, posting_pair desc
%test.updateSuccessCBSSettlementStatusQuery=update cbs_settlement_table set is_settled_at_cbs = true , settled_at_cbs=NOW() , settlement_id='{@settlementId}' , cbs_reference_no='{@cbsReferenceNo}' where txn_reference_no='@{txn_ref_No}'
%test.updateFailerCBSSettlementStatusQuery=update cbs_settlement_table set settled_at_cbs=NOW() , settlement_id='{@settlementId}' , cbs_response='{@cbsresponse}' where txn_reference_no='@{txn_ref_No}'

## settlemetn audit
%test.updateStatusQuery= update settlement_audit set processing_status='@{processingStatus}',last_updated=NOW() where batch_id='@{batchId}' and settlement_id='@{settlementId}' and is_running=true
%test.stopBatchQuery=update settlement_audit set is_running=false, remarks='@{remark}' ,last_updated=NOW() where batch_id='@{batchId}' and settlement_id='@{settlementId}' and is_running=true
%test.AddSettlementResponeTotheTable=update settlement_audit set is_running=false,records_count={@recordCount} ,success_count={@successCount},failed_count={@failedCount},reject_count={@rejectCount} ,date_responded=NOW(), processing_status='SETTLEMENT', last_updated=NOW(),remarks='{@remarks}' where batch_id='{@batchId}' and settlement_id='{@settlementId}' and is_running=true
%test.AddFileRequesttoTable=update settlement_audit set file_name='{@FileName}' ,records_count={@recordCount} ,reject_count={@rejectCount}, processing_status='IFT_FILE_GENERATION_SUCCEEDED', last_updated=NOW(),remarks='{@remarks}' where batch_id='{@batchId}' and settlement_id='{@settlementId}' and is_running=true
%test.AddFileResponsetoTable=update settlement_audit set is_running=false,result_file_name='{@resultFileName}',success_count={@successCount},failed_count={@failedCount},date_responded=NOW(), processing_status='SETTLEMENT', last_updated=NOW(),remarks='{@remarks}' where batch_id='{@batchId}' and settlement_id='{@settlementId}' and is_running=true


%test.com.finobank.ptaplus.client.PostTransaction/mp-rest/url=http://localhost:6733/post-transaction
%test.com.finobank.ptaplus.client.EodBatchRuleClient/mp-rest/url=http://localhost:6733/eod-config
%test.com.finobank.ptaplus.client.SettlementBatchClient/mp-rest/url=http://localhost:6733/batch-config
%test.com.finobank.ptaplus.client.UpdateGlService/mp-rest/url=http://localhost:6733/glstatus
%test.com.finobank.ptaplus.client.CbsTransactionRestClient/mp-rest/url=http://localhost:6733/esb/cbs/settlement/transactions

%test.SETTLEMENT_IFT_PROCESSING_ROUTE=direct:settlement-ift-processing-route
# SETTLEMENT_IFT_PROCESSING_ROUTE=direct:settlement-ift-processing-route

%test.minioConfig=endpoint=localhost&proxyPort=9090&accessKey=identity&secretKey=credential
quarkus.minio.allow-empty=false
quarkus.minio.url=http://localhost:9090
quarkus.minio.access-key=identity
quarkus.minio.secret-key=credential


