unSettledTransactionQuery=with trandetails as (select txn_reference_no, posting_amount, created_at, case when dr_gl_account = '18014' then -posting_amount when cr_gl_account = '18014' then posting_amount end as amount, coalesce(lag (case when dr_gl_account = '18014' then -posting_amount when cr_gl_account = '18014' then posting_amount end) over(order by created_at),0.00) balance from transaction_leg_amt where (dr_gl_account = '18014' or cr_gl_account = '18014') and (created_at < '2023-12-01 12:54:29.794')and transaction_type !='PTNREOD' and transaction_type !='PTASTLMT'), sumdetails as (select txn_reference_no, created_at, amount, sum(amount) over (order by created_at) balance from trandetails), balanceamt as (select balance as nett from sumdetails  order by created_at desc limit 1), settle_results as (select sumdetails.txn_reference_no, sumdetails.created_at, sumdetails.amount, sumdetails.balance, balanceamt.nett, balanceamt.nett-10  as threshold, (balanceamt.nett-10)-sumdetails.balance as settle_amt, case when (balanceamt.nett-10)-sumdetails.balance >= 0 then true else false end as tosettle  from sumdetails,balanceamt order by created_at desc) select txn_reference_no, created_at, amount, tosettle from settle_results where tosettle=true


##transactionQueries
# unSettledTransactionQuery=select f from TransactionTable f where f.boolSettledAtP2m=false 
unSettledTransactionQuery=with trandetails as (select txn_reference_no, posting_amount, created_at, case when dr_gl_account = '@{partnerGl}' then -posting_amount when cr_gl_account = '@{partnerGl}' then posting_amount end as amount, coalesce(lag (case when dr_gl_account = '@{partnerGl}' then -posting_amount when cr_gl_account = '@{partnerGl}' then posting_amount end) over(order by created_at),0.00) balance from transaction_leg_amt where (dr_gl_account = '@{partnerGl}' or cr_gl_account = '@{partnerGl}') and (created_at < '@{settleDate}') and is_settled_at_p2m=false and transaction_type !='PTNREOD' and transaction_type !='PTASTLMT'), sumdetails as (select txn_reference_no, created_at, amount, sum(amount) over (order by created_at) balance from trandetails), balanceamt as (select balance as nett from sumdetails  order by created_at desc limit 1), settle_results as (select sumdetails.txn_reference_no, sumdetails.created_at, sumdetails.amount, sumdetails.balance, balanceamt.nett, balanceamt.nett-@{thramount}  as threshold, (balanceamt.nett-@{thramount})-sumdetails.balance as settle_amt, case when (balanceamt.nett-@{thramount})-sumdetails.balance >= 0 then true else false end as tosettle  from sumdetails,balanceamt order by created_at desc) select txn_reference_no, created_at, amount, tosettle from settle_results where tosettle=true


updateTransactionQuery=update transaction_leg_amt set is_settled_at_p2m=true , settled_at_p2m='{@settlementTime}' , settlement_id='{@settlementId}' where txn_reference_no in (with trandetails as (select txn_reference_no, posting_amount, created_at, case when dr_gl_account = '{@partnerGl}' then -posting_amount when cr_gl_account = '{@partnerGl}' then posting_amount end as amount, coalesce(lag (case when dr_gl_account = '{@partnerGl}' then -posting_amount when cr_gl_account = '{@partnerGl}' then posting_amount end) over(order by created_at),0.00) balance from transaction_leg_amt where (dr_gl_account = '{@partnerGl}' or cr_gl_account = '{@partnerGl}') and (created_at < '{@thresholdTime}') and is_settled_at_p2m=false and transaction_type !='PTNREOD' and transaction_type !='PTASTLMT'), sumdetails as (select txn_reference_no, created_at, amount, sum(amount) over (order by created_at) balance from trandetails), balanceamt as (select balance as nett from sumdetails  order by created_at desc limit 1), settle_results as (select sumdetails.txn_reference_no, sumdetails.created_at, sumdetails.amount, sumdetails.balance, balanceamt.nett, balanceamt.nett-{@thresholdAmount}  as threshold, (balanceamt.nett-{@thresholdAmount})-sumdetails.balance as settle_amt, case when (balanceamt.nett-{@thresholdAmount})-sumdetails.balance >= 0 then true else false end as tosettle  from sumdetails,balanceamt order by created_at desc) select txn_reference_no from settle_results where tosettle=true)

##settlementQueries
unsettledSettlementQuery=select cst from CBSSettlementTable cst  where cst.referenceNo  in (select cst2.referenceNo  from CBSSettlementTable cst2 where (cst2.creditGlAccount=?1 or cst2.debitGlAccount=?1) and cst2.settledAtCbs =false)
updateSuccessCBSSettlementStatusQuery=update cbs_settlement_table set is_settled_at_cbs = true , settled_at_cbs='{@SettledTime}' , settlement_id='{@settlementId}' , cbs_reference_no='{@cbsReferenceNo}' where txn_reference_no='@{txn_ref_No}'
updateFailerCBSSettlementStatusQuery=update cbs_settlement_table set settled_at_cbs='{@SettledTime}' , settlement_id='{@settlementId}' , cbs_response='{@cbsresponse}' where txn_reference_no='@{txn_ref_No}'

## settlemetn audit
updateStatusQuery= update settlement_audit set processing_status='@{processingStatus}',last_updated='@{lastUpdated}' where batch_id='@{batchId}' and settlement_id='@{settlementId}' and is_running=true
stopBatchQuery=update settlement_audit set is_running=false, remarks='@{remark}' ,last_updated='@{lastUpdate}' where batch_id='@{batchId}' and settlement_id='@{settlementId}' and is_running=true
AddSettlementResponeTotheTable=update settlement_audit set is_running=false,records_count={@recordCount} ,success_count={@successCount},failed_count={@failedCount},reject_count={@rejectCount} ,date_responded='{@dateResponded}', processing_status='SETTLEMENT', last_updated='{@dateResponded}',remarks='{@remarks}' where batch_id='{@batchId}' and settlement_id='{@settlementId}' and is_running=true
AddFileRequesttoTable=update settlement_audit set file_name='{@FileName}' ,records_count={@recordCount} ,reject_count={@rejectCount}, processing_status='IFT_FILE_GENERATION_SUCCEEDED', last_updated='{@dateResponded}',remarks='{@remarks}' where batch_id='{@batchId}' and settlement_id='{@settlementId}' and is_running=true
AddFileResponsetoTable=update settlement_audit set is_running=false,result_file_name='{@resultFileName}',success_count={@successCount},failed_count={@failedCount},date_responded='{@dateResponded}', processing_status='SETTLEMENT', last_updated='{@dateResponded}',remarks='{@remarks}' where batch_id='{@batchId}' and settlement_id='{@settlementId}' and is_running=true

# glBalance 
getGlBalancequery=select f from GeneralLedgerBalance f where f.generalLedgerNumber=?1
